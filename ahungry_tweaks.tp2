BACKUP ~ahungry_tweaks/backup~
AUTHOR ~Ahungry~
VERSION 1.0

BEGIN ~Ahungry's Tweaks~ DESIGNATED 1 LABEL ahungry_tweaks_prelude
REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee eet iwdee~) ~Game not supported.~

OUTER_SET remove_backstab_imm = 0
OUTER_SET remove_timestop_imm = 0

PRINT ~
In an effort to balance out some mega-mod added items (some of the
older content) with insane boosts of things like +3 to +5 attacks per
round, this component normalizes all +APR items as such:

- 1.5 to 2 APR -> 1 APR, +1 thac0, +1 damage
- 2.5 to 3 APR -> 1 APR, +2 thac0, +1 damage
- 3.5 to 4 APR -> 1 APR, +2 thac0, +2 damage
- 4.5 to 5 APR -> 1 APR, +3 thac0, +2 damage

The bonuses should apply to both the mainhand and offhand weapons.
~

BEGIN ~Balance Item +APR (cap +APR at 1 APR per item, replace w/ thac0 + dmg bonuses)~ DESIGNATED 1000 LABEL ahungry_tweaks_apr
REQUIRE_PREDICATE (MOD_IS_INSTALLED ~ahungry_tweaks/ahungry_tweaks.tp2~ 1) ""

// https://gibberlings3.github.io/iesdp/opcodes/bgee.htm

// Super rudimentary - iterate all items and remove APR opcode
COPY_EXISTING_REGEXP GLOB ~^.+\.itm~ ~override~
  READ_SHORT 0x1c item_type

  // Monster items can be type 0 (misc) - avoid patching them
  PATCH_IF (item_type != 0) BEGIN
    // LPF DELETE_EFFECT INT_VAR match_opcode = 62 match_parameter2 = 0 END

    // LPF DELETE_EFFECT INT_VAR match_opcode = 0x1 END

    // CUMULATIVE STUFF
    // Give a thac0 bonus based on original APR bonus
    // 1 APR = 0.5 APR + 1 thac0
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=1 match_parameter2=0 opcode=0x11c parameter1=1 parameter2=0 END

    // 1.5 to 2 APR = 1 APR + 1 thac0 + 1 damage
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=7 match_parameter2=0 opcode=0x11c parameter1=1 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=7 match_parameter2=0 opcode=0x11d parameter1=1 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=2 match_parameter2=0 opcode=0x11c parameter1=1 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=2 match_parameter2=0 opcode=0x11d parameter1=1 parameter2=0 END

    // 2.5 to 3 APR = 1 APR + 2 thac0 + 1 damage
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=8 match_parameter2=0 opcode=0x11c parameter1=2 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=8 match_parameter2=0 opcode=0x11d parameter1=1 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=3 match_parameter2=0 opcode=0x11c parameter1=2 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=3 match_parameter2=0 opcode=0x11d parameter1=1 parameter2=0 END

    // 3.5 to 4 APR = 1 APR + 2 thac0 + 2 damage
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=0 opcode=0x11c parameter1=2 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=0 opcode=0x11d parameter1=2 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=0 opcode=0x11c parameter1=2 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=0 opcode=0x11d parameter1=2 parameter2=0 END

    // 4.5 to 5 APR = 1 APR + 3 thac0 + 2 damage
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=0 opcode=0x11c parameter1=3 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=0 opcode=0x11d parameter1=2 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=0 opcode=0x11c parameter1=3 parameter2=0 END
    LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=0 opcode=0x11d parameter1=2 parameter2=0 END

    // Cap it at 1 APR - this works without checking p1 because we won't really have 0x1 with p1 = 0
    LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=2 match_parameter2=0 parameter1=1 END
    LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=3 match_parameter2=0 parameter1=1 END
    LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=0 parameter1=1 END
    LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=0 parameter1=1 END

    LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=7 match_parameter2=0 parameter1=1 END
    LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=8 match_parameter2=0 parameter1=1 END
    LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=0 parameter1=1 END
    LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=0 parameter1=1 END

    // NOTE: For the FLAT and FINAL stuff, I'm catching a TON of ranged weapons (bows) - in early
    // testing, I think this is because I'm accidentally upping APR to 3 (not just lowering it)

    // // FLAT STUFF
    // // Give a thac0 bonus based on original APR bonus
    // // 4 APR = 3 APR + 1 thac0 + 1 damage
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=1 opcode=0x11c parameter1=1 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=1 opcode=0x11d parameter1=1 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=1 opcode=0x11e parameter1=1 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=1 opcode=0x11c parameter1=1 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=1 opcode=0x11d parameter1=1 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=1 opcode=0x11e parameter1=1 parameter2=0 END

    // // 5 APR = 3 APR + 2 thac0 + 2 damage
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=1 opcode=0x11c parameter1=2 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=1 opcode=0x11d parameter1=2 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=1 opcode=0x11e parameter1=2 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=1 opcode=0x11c parameter1=2 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=1 opcode=0x11d parameter1=2 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=1 opcode=0x11e parameter1=2 parameter2=0 END

    // // Cap it at set 3 APR
    // LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=1 parameter1=3  END
    // LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=1 parameter1=3  END
    // LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=1 parameter1=3  END
    // LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=1 parameter1=3  END

    // // FINAL STUFF (I guess like another FLAT STUFF modifier)
    // // Give a thac0 bonus based on original APR bonus
    // // 4 APR = 3 APR + 1 thac0 + 1 damage
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=3 opcode=0x11c parameter1=1 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=3 opcode=0x11d parameter1=1 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=3 opcode=0x11e parameter1=1 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=3 opcode=0x11c parameter1=1 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=3 opcode=0x11d parameter1=1 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=3 opcode=0x11e parameter1=1 parameter2=0 END

    // // 5 APR = 3 APR + 2 thac0 + 2 damage
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=3 opcode=0x11c parameter1=2 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=3 opcode=0x11d parameter1=2 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=3 opcode=0x11e parameter1=2 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=3 opcode=0x11c parameter1=2 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=3 opcode=0x11d parameter1=2 parameter2=0 END
    // LPF CLONE_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=3 opcode=0x11e parameter1=2 parameter2=0 END

    // // Cap it at set 3 APR
    // LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=4 match_parameter2=3 parameter1=3  END
    // LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=5 match_parameter2=3 parameter1=3  END
    // LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=9 match_parameter2=3 parameter1=3  END
    // LPF ALTER_EFFECT INT_VAR silent=1 match_opcode=0x1 match_parameter1=10 match_parameter2=3 parameter1=3  END
  END
BUT_ONLY

// BEGIN ~Creature Adjustments~ DESIGNATED 2000 LABEL ahungry_tweaks_creatures
// REQUIRE_PREDICATE (MOD_IS_INSTALLED ~ahungry_tweaks/ahungry_tweaks.tp2~ 1) ""

// PRINT ~
// Do you want to remove creature backstab immunity (class and item immunity will remain)?

// 1 - yes
// 2 - no
// ~
// ACTION_READLN ~remove_backstab_imm~

// OUTER_WHILE ((!IS_AN_INT remove_backstab_imm) OR remove_backstab_imm > 2 OR remove_backstab_imm < 1) BEGIN
//   PRINT ~Please enter '1' or '2'.~
//   ACTION_READLN ~remove_backstab_imm~
// END

// PRINT ~
// Do you want to remove creature timestop immunity?

// 1 - yes
// 2 - no
// ~
// ACTION_READLN ~remove_timestop_imm~

// OUTER_WHILE ((!IS_AN_INT remove_timestop_imm) OR remove_timestop_imm > 2 OR remove_timestop_imm < 1) BEGIN
//   PRINT ~Please enter '1' or '2'.~
//   ACTION_READLN ~remove_timestop_imm~
// END

BEGIN ~Creatures: Remove backstab immunity?~ DESIGNATED 2000 LABEL ahungry_tweaks_cre_backstab
REQUIRE_PREDICATE (MOD_IS_INSTALLED ~ahungry_tweaks/ahungry_tweaks.tp2~ 1) ""

OUTER_SET remove_backstab_imm = 1

BEGIN ~Creatures: Remove timestop immunity?~ DESIGNATED 3000 LABEL ahungry_tweaks_cre_timestop
REQUIRE_PREDICATE (MOD_IS_INSTALLED ~ahungry_tweaks/ahungry_tweaks.tp2~ 1) ""

OUTER_SET remove_timestop_imm = 1

BEGIN ~Creatures: Apply adjustments?~ DESIGNATED 4000 LABEL ahungry_tweaks_creatures
REQUIRE_PREDICATE (MOD_IS_INSTALLED ~ahungry_tweaks/ahungry_tweaks.tp2~ 2000 OR MOD_IS_INSTALLED ~ahungry_tweaks/ahungry_tweaks.tp2~ 3000) ""

COPY_EXISTING_REGEXP GLOB ~^.+\.cre$~ ~override~
    // Or we can remove the effect
    PATCH_IF (remove_backstab_imm = 1) BEGIN
        LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=292 END
    END

    // Also remove immunity to timestop
    PATCH_IF (remove_timestop_imm = 1) BEGIN
        LPF DELETE_CRE_EFFECT INT_VAR opcode_to_delete=310 END
    END
BUT_ONLY

BEGIN ~Mods: Fix missing Oversight HQ door in Dark Horizons on EET?~ DESIGNATED 5000 LABEL ahungry_tweaks_mods_oversight_hq
REQUIRE_PREDICATE (FILE_EXISTS_IN_GAME ~CM0750.ARE~) ""

COPY_EXISTING "BG0700.are" ~override~
  PATCH_IF (FILE_EXISTS_IN_GAME ~CM0750.ARE~) BEGIN
    LPF ADD_AREA_REGION_TRIGGER
      INT_VAR
        ab_RT_Type = 2
        ab_RT_BbLX = 3704 // Left
        ab_RT_BbLY = 2260 // Top
        ab_RT_BbHX = 3825 // Right
        ab_RT_BbHY = 2325 // Bottom
        ab_RT_VxPr = 5    // Vertex pairs
        ab_RT_CuId = 30   // Cursor number
        ab_RT_Fbit = 0x2 // flag bits, party required
        ab_RT_TDtD = 0 // Trap detection difficulty
        ab_RT_TRmD = 0 // Trap Removal Difficulty
        ab_RT_TSet = 0 // Trap set
        ab_RT_TDet = 0 // Trap is detected
        ab_RT_LPoX = 3764 // Launch point X
        ab_RT_LPoY = 2292 // Launch point Y
        ab_RT_Rbcs = 0x0 // None
        ab_RT_ALPX = 0
        ab_RT_ALPY = 0
        // SET ab_RT_Dial // Dialog - PST only
        ab_RT_Vx_X_0 = 3704
        ab_RT_Vx_Y_0 = 2304
        ab_RT_Vx_X_1 = 3812
        ab_RT_Vx_Y_1 = 2259
        ab_RT_Vx_X_2 = 3825
        ab_RT_Vx_Y_2 = 2277
        ab_RT_Vx_X_3 = 3717
        ab_RT_Vx_Y_3 = 2325
        ab_RT_Vx_X_4 = 3704
        ab_RT_Vx_Y_4 = 2304

      STR_VAR
        ab_RT_Name = ~Door0750~
        ab_RT_Dest = ~CM0750.ARE~
        ab_RT_EntN = ~Exit0700~
        ab_RT_KeyI =  ~~ // None
        ab_RT_Itxt = ~Oversight HQ~ // Legacy mod AR0700.are didn't mention this at all
    END
  END
BUT_ONLY

BEGIN ~Items: Allow +stat tomes to be usable by all (aka Wizard Slayer)?~ DESIGNATED 6000 LABEL ahungry_tweaks_items_tomes

COPY_EXISTING_REGEXP GLOB ~^book0[345678]\.itm~ ~override~ //copies all item files
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // avoid crashing on empty items
    // a 0 indicates usable, so just zero out all the usability bytes
    // General usability flags (alignment/classes)
    WRITE_BYTE 0x1E 0x0
    WRITE_BYTE 0x1F 0x0
    WRITE_BYTE 0x20 0x0
    WRITE_BYTE 0x21 0x0
    // Kit usability flags
    WRITE_BYTE 0x29 0x0
    WRITE_BYTE 0x2b 0x0
    WRITE_BYTE 0x2d 0x0
    WRITE_BYTE 0x2f 0x0

    // Tutorial from weidu for adjusting usability of items
    // READ_BYTE    0x20 mage //reads the byte containing the mage usability flag
    // PATCH_IF ((mage BAND 0b00000100) = 0b00000000) BEGIN // if it is usable by mages
    //   READ_BYTE    0x1E bard //reads the byte containing bard usability flag
    //   READ_SHORT    0x1C type //reads the byte containing item type
    //   PATCH_IF (type = 67) OR (type = 2) BEGIN // if it is a robe or armor
    //     WRITE_BYTE    0x1E (bard BAND 0b10111111)  // makes usable by bards
    //   END
    // END
  END
BUT_ONLY_IF_IT_CHANGES

BEGIN ~Items: Allow potions to be usable by all?~ DESIGNATED 7000 LABEL ahungry_tweaks_items_potions

COPY_EXISTING_REGEXP GLOB ~.*potn.*\.itm~ ~override~ //copies all item files
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN // avoid crashing on empty items
    // a 0 indicates usable, so just zero out all the usability bytes
    // General usability flags (alignment/classes)
    WRITE_BYTE 0x1E 0x0
    WRITE_BYTE 0x1F 0x0
    WRITE_BYTE 0x20 0x0
    WRITE_BYTE 0x21 0x0

    // Kit usability flags
    WRITE_BYTE 0x29 0x0
    WRITE_BYTE 0x2b 0x0
    WRITE_BYTE 0x2d 0x0
    WRITE_BYTE 0x2f 0x0
  END
BUT_ONLY_IF_IT_CHANGES


// #208 (0xD0) op208.html Variants: PST
// Parameter #1:	Minimum Value
// Parameter #2:	Irrelevant
// Description:
// The targeted creature(s) HP value will not drop below the value specified by the Minimum Value field.
// This effect sets MINHITPOINTS to Minimum Value.

// Lets find all the items in game that contain that opcode
// COPY_EXISTING_REGEXP GLOB ~^.+\.itm~ ~override~
//   LPF DELETE_EFFECT INT_VAR silent=1 match_opcode=0xd0 END
// BUT_ONLY
PRINT ~This component can fix invincible trolls due to bad
script conditions in a large mod setup (unable to ever die).
However, it will also remove the necessity to hit them with fire/acid first, which
could make the game easier than it should be (or you can play by the honor
system and keep your fireballs loaded for troll battles).
~

BEGIN ~Items: Remove minhp1/monhp1 items from trolls?~ DESIGNATED 8000 LABEL ahungry_tweaks_items_hp

// Try to find the trolls
COPY_EXISTING_REGEXP GLOB ~^.+\.cre$~ ~override~
  // Build up a list of everyone who uses this to be immune to death
  READ_LONG  0x2bc itm_off
  READ_LONG  0x2c0 itm_num
  TO_LOWER SOURCE_RES

  SET is_troll = 0
  SET is_demon = 0
  SET is_invincible = 0

  FOR (index = 0 ; index < itm_num ; ++index) BEGIN // searches through items
    READ_ASCII (itm_off + (0x14 * index)) item
    TO_LOWER item

    PATCH_IF (is_troll = 0 AND "%item%" STRING_COMPARE_REGEXP "^troll\(reg\|imm\)" = 0) BEGIN
      SET is_troll = 1
    END
    PATCH_IF (is_invincible = 0 AND "%item%" STRING_COMPARE_REGEXP "^\(minhp\|monhp\)1" = 0) BEGIN
      SET is_invincible = 1
    END
    // PATCH_IF (is_demon = 0 AND "%item%" STRING_COMPARE_REGEXP "^\(ringdemn\)" = 0) BEGIN
    //   SET is_demon = 1
    //   PATCH_PRINT ~Detected a demon: %SOURCE_RES%~
    // END
  END

  PATCH_IF (is_invincible AND (is_troll = 1 OR is_demon = 1)) BEGIN
    PATCH_PRINT ~Detected and fixed an invincible troll: %SOURCE_RES%~
    LPF DELETE_CRE_ITEM STR_VAR item_to_delete = "monhp1" END
    LPF DELETE_CRE_ITEM STR_VAR item_to_delete = "minhp1" END
  END
BUT_ONLY

// BEGIN ~Fix the stuck party~ DESIGNATED 9000 LABEL ahungry_tweaks_items_fff

// // Support engine-specific display of strings
// ACTION_IF (GAME_IS ~bg1 totsc iwd how totlm iwd2 pst~) BEGIN
//   OUTER_SPRINT display_string ~DisplayString~
// END ELSE BEGIN
//   OUTER_SPRINT display_string ~DisplayStringHead~
// END


// // Patches the current BCS resource.
// DEFINE_PATCH_FUNCTION patch_script
// INT_VAR
//   patch_all = 0 // whether to patch everything, including NoAction() blocks
// BEGIN
//   DECOMPILE_AND_PATCH BEGIN
//     SET x = 0
//     REPLACE_EVALUATE
//       ~\(RESPONSE #[0-9]+[%WNL%]+\)[ %TAB%]+\([^ %TAB%%WNL%]+\)~
//       BEGIN
//         SPRINT debug ~~
//         PATCH_IF (patch_all != 0 OR NOT ~%MATCH2%~ STR_EQ ~NoAction()~) BEGIN
//           SET x += 1
//           SET strref = RESOLVE_STR_REF(~Running block %x% of %SOURCE_FILE%~) // Running block %x% of %SOURCE_FILE%
//           SPRINT debug ~%display_string%(Myself,%strref%) %MATCH2%~
//         END
//       END
//       ~\1 %debug%~
//   END
// END

// COPY_EXISTING_REGEXP GLOB ~bg5400\.bcs~ ~override~
//   TO_UPPER ~SOURCE_RES~
//   PATCH_IF (NOT VARIABLE_IS_SET $broken_script(~%SOURCE_RES%~)) BEGIN
//     LPF patch_script INT_VAR patch_all = 0 END
//   END
// BUT_ONLY

// BEGIN ~Find all familiars~ DESIGNATED 10000 LABEL ahungry_tweaks_items_familiars

// COPY_EXISTING_REGEXP GLOB ~^.+\.cre$~ ~override~
//   // Build up a list of everyone who uses this to be immune to death
//   READ_BYTE  0x270 enemy_ally
//   TO_LOWER SOURCE_RES

//   PATCH_IF (enemy_ally = 3) BEGIN
//     PATCH_PRINT ~%SOURCE_RES% is flagged as a familiar...~
//   END
// BUT_ONLY
